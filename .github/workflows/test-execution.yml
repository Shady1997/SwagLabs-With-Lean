name: Build and Cross-browser Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
permissions:
  contents: write  # Ensure the GITHUB_TOKEN has write permissions to the repository
jobs:
  cross-browser-test:
    runs-on: macos-latest

    strategy:
      matrix:
        browser: [ chrome, firefox, edge, safari ]

    steps:
#      - uses: actions/checkout@v4
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to avoid shallow clone issues
          submodules: true  # If using submodules, fetch them

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 22
          distribution: oracle

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B -q -DskipTests package

      - name: Set up browser dependencies for ${{ matrix.browser }}
        run: |
          if [ "${{ matrix.browser }}" = "chrome" ]; then
            brew install --cask google-chrome
          elif [ "${{ matrix.browser }}" = "firefox" ]; then
            brew install --cask firefox
          elif [ "${{ matrix.browser }}" = "edge" ]; then
            brew install --cask microsoft-edge
          elif [ "${{ matrix.browser }}" = "safari" ]; then
            echo "Safari is pre-installed on macOS"
          fi

      - name: Run local tests on ${{ matrix.browser }}
        run: |
          if [ "${{ matrix.browser }}" = "safari" ]; then
            mvn -B -q test -Pweb-execution -Dsuite=local -Dtarget=local -Dbrowser=safari
          else
            mvn -B -q test -Pweb-execution -Dsuite=local -Dtarget=local -Dheadless=true -Dbrowser=${{ matrix.browser }}
          fi

      # Step 6: Upload Test Results (if generated)
      - name: Upload Test Results
        uses: actions/upload-artifact@v3   # Updated to v3
        with:
          name: test-results
          path: target/surefire-reports  # Change the path if your reports are generated elsewhere

      # Step 7: Commit and push HTML report (if reports are generated in HTML)
      - name: Commit and push HTML report
        run: |
          git config --global user.name "Shady1997"
          git config --global user.email "shadyahmed9719@gmail.com"

          # Add only the HTML reports if necessary
          git add index.html
          git commit -m "Update Selenium test report" || echo "No changes to commit"

          # Stash any local changes before pulling
          git stash

          # Set the default pull behavior to rebase
          git config pull.rebase true

          # Pull with rebase and set conflict resolution strategy
          git pull --rebase=merges origin master

          # Apply stashed changes back (if any)
          git stash pop || echo "No stashed changes to apply"

          # Push the changes to the remote repository
          git push origin master

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#name: Build and Test
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#jobs:
#  local-test:
#    runs-on: macos-latest
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: 22
#          distribution: oracle
#
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      - name: Build with Maven
#        run: mvn -B -q -DskipTests package
#
#      - name: Run local tests
#        run: mvn -B -q test -Pweb-execution -Dsuite=local -Dtarget=local -Dheadless=false -Dbrowser=safari
